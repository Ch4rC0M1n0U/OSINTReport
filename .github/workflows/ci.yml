name: CI/CD - Build & Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Job 1: Vérifier le backend
  backend-build:
    name: Backend - Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Generate Prisma Client
        working-directory: ./backend
        run: npx prisma generate
      
      - name: Build TypeScript
        working-directory: ./backend
        run: npm run build
      
      - name: Run tests
        working-directory: ./backend
        run: npm test
        continue-on-error: true

  # Job 2: Vérifier le frontend
  frontend-build:
    name: Frontend - Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Build Vue.js app
        working-directory: ./frontend
        run: npm run build
        env:
          VITE_API_BASE_URL: http://localhost:4000
      
      - name: Run tests
        working-directory: ./frontend
        run: npm test
        continue-on-error: true

  # Job 3: Vérifier les Dockerfiles
  docker-build:
    name: Docker - Verify Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: osintreport-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: osintreport-frontend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Job 4: Analyse de sécurité
  security-scan:
    name: Security - Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Scan Backend dependencies
        working-directory: ./backend
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Scan Frontend dependencies
        working-directory: ./frontend
        run: npm audit --audit-level=moderate
        continue-on-error: true
