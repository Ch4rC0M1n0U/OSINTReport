# Configuration de Production - OSINTReport
# Copier ce fichier en .env et remplir les valeurs

# =======================
# BASE DE DONNÉES
# =======================
POSTGRES_USER=osint_admin
POSTGRES_PASSWORD=CHANGE_ME_STRONG_PASSWORD_HERE
POSTGRES_DB=osint_db

# =======================
# BACKEND API
# =======================
NODE_ENV=production
PORT=4000

# URL de la base de données (sera construite automatiquement dans docker-compose)
DATABASE_URL=postgresql://osint_admin:CHANGE_ME_STRONG_PASSWORD_HERE@postgres:5432/osint_db?schema=public

# JWT & Sessions
JWT_SECRET=CHANGE_ME_RANDOM_STRING_MIN_32_CHARS
JWT_EXPIRES_IN=7d
COOKIE_SECRET=CHANGE_ME_ANOTHER_RANDOM_STRING_32_CHARS
COOKIE_DOMAIN=
# COOKIE_DOMAIN doit rester vide pour localhost/développement
# Pour la production avec domaine personnalisé, utiliser: .votredomaine.com

# URLs
FRONTEND_URL=https://votredomaine.com
# FRONTEND_URL=http://localhost:3000  # Pour développement local

# =======================
# MEILISEARCH
# =======================
MEILI_HOST=http://meilisearch:7700
MEILI_MASTER_KEY=CHANGE_ME_RANDOM_STRING_MIN_16_CHARS
MEILI_ENV=production
MEILI_NO_ANALYTICS=true

# =======================
# COMPTE ADMINISTRATEUR
# =======================
ADMIN_EMAIL=admin@votreorganisation.be
ADMIN_PASSWORD=CHANGE_ME_STRONG_PASSWORD
ADMIN_FIRST_NAME=Admin
ADMIN_LAST_NAME=System

# =======================
# SMTP (Email)
# =======================
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=noreply@votreorganisation.be
SMTP_PASSWORD=SMTP_PASSWORD_HERE
SMTP_FROM_EMAIL=noreply@votreorganisation.be
SMTP_FROM_NAME=OSINTReport

# =======================
# FRONTEND
# =======================
VITE_API_BASE_URL=https://api.votredomaine.com
# VITE_API_BASE_URL=http://localhost:4000  # Pour développement local

# =======================
# PORTS (Optionnel)
# =======================
FRONTEND_PORT=80
HTTP_PORT=80
HTTPS_PORT=443

# =======================
# SÉCURITÉ
# =======================
# Générer des clés aléatoires sécurisées avec:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
